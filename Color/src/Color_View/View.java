/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Color_View;

import Color_Controller.Controller;
import Color_Model.Model;
import static java.awt.Color.black;
import static java.awt.Color.blue;
import static java.awt.Color.green;
import static java.awt.Color.red;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JTextArea;
/**
 *
 * @author LENOVO
 */
public class View extends javax.swing.JFrame implements Observer {

    Model model;
    Controller controller;
    JButton  undo;
    JLabel [][] c;
    JTextArea cl;
   
    /**
     * Creates new form View
     */
    public View() {
        initComponents();
        this.initBotones();
    }
    private void initBotones(){
     undo= new JButton("UNDO");
     undo.setBounds(60,280,70,20);
     undo.setActionCommand("UNDO");
     this.add(undo);
      int fil = 3;
      int col = 1;
     c = new JLabel[fil][col];
     for (int i = 0; i < fil; i++) {
            for (int j = 0; j < col; j++) {
                c[i][j] = new JLabel();
                 c[i][j].setBounds(10+j*60,40+i*82,50,20);
                 this.add(c[i][j]);
            }
        }
                 c[0][0].setText("Red");
                 c[0][0].setForeground(red);
                 c[1][0].setText("Green");
                 c[1][0].setForeground(green);
                 c[2][0].setText("Blue");
                 c[2][0].setForeground(blue);
                 cl = new JTextArea();
                 cl.setBounds(275,50,205,185);
                 cl.setBackground(black);
                 this.add(cl);
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Red = new javax.swing.JSlider();
        Green = new javax.swing.JSlider();
        Blue = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Red.setMajorTickSpacing(50);
        Red.setMaximum(255);
        Red.setPaintLabels(true);
        Red.setPaintTicks(true);
        Red.setValue(0);
        Red.setName("Red"); // NOI18N
        Red.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                RedStateChanged(evt);
            }
        });

        Green.setMajorTickSpacing(50);
        Green.setMaximum(255);
        Green.setPaintLabels(true);
        Green.setPaintTicks(true);
        Green.setValue(0);
        Green.setName("Green"); // NOI18N
        Green.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                GreenStateChanged(evt);
            }
        });

        Blue.setMajorTickSpacing(50);
        Blue.setMaximum(255);
        Blue.setPaintLabels(true);
        Blue.setPaintTicks(true);
        Blue.setValue(0);
        Blue.setName("Blue"); // NOI18N
        Blue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                BlueStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Red, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Blue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Green, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(247, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(Red, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(Green, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(Blue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//NOTA IR A PRIORIDADES DE LO QUE AÃ‘ADA AL VIEW Y PONERLE NOMBRE PARA EVITAR PROBLEMAS DE PUNTEROS
    private void RedStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_RedStateChanged
        cl.setBackground(model.getCurrent());
    }//GEN-LAST:event_RedStateChanged

    private void GreenStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_GreenStateChanged
         cl.setBackground(model.getCurrent());
    }//GEN-LAST:event_GreenStateChanged

    private void BlueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_BlueStateChanged
        cl.setBackground(model.getCurrent());
    }//GEN-LAST:event_BlueStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View().setVisible(true);
            }
        });
    }

    public void setModel(Model model){
    this.model=model;
    model.addObserver(this);
}  
    @Override
    public void update(Observable o, Object arg) {
      
    
    
    }
    public void setController(Controller controller) {  //OJO AGREGAR SIEMPRE EL ACTION LISTENER PARA CADA BOTON O HERRAMIENTA QUE UTILICE
        this.controller = controller;
        Red.addMouseListener(controller);
        Blue.addMouseListener(controller);
        Green.addMouseListener(controller);
        undo.addActionListener(controller);      
      
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider Blue;
    private javax.swing.JSlider Green;
    private javax.swing.JSlider Red;
    // End of variables declaration//GEN-END:variables

  
}
